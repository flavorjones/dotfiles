#! /usr/bin/env ruby

require "bundler/inline"

gemfile do
  source "https://rubygems.org/"
  gem "slop"
end

require 'slop'
require 'date'

DEFAULT_BRANCH = "master"
ANSI_REVERSE = "\u001b[7m"
ANSI_BOLD = "\u001b[1m"
ANSI_RESET = "\u001b[0m"

def _usage
  puts "USAGE: git-branch-overview [--help|-h] [<remote>]"
  exit 1
end

merge_opts = ""
opts = Slop.parse do |opt|
  opt.on("--merged", "Show only branches merged into #{DEFAULT_BRANCH} (default is show all branches)") do
    merge_opts = "--merged"
  end
  opt.bool("--no-merged", "Show only branches not merged into #{DEFAULT_BRANCH} (default is show all branches)") do
    merge_opts = "--no-merged"
  end
  opt.string "-r", "--remote", "Focus on a remote (default is to show local)"
  opt.on("-h", "--help", "See command usage") do
    puts opt
    exit 1
  end
end

branches = if opts[:remote]
             `git branch -r --list '#{opts[:remote]}/*' #{merge_opts}`
               .split("\n").map(&:strip)
               .reject { |b| b =~ %r{^#{opts[:remote]}/(#{DEFAULT_BRANCH}$|HEAD)} }
           else
             `git branch --list #{merge_opts} | cut -c2-`
               .split("\n").map(&:strip)
               .reject { |b| b =~ /^#{DEFAULT_BRANCH}$/ }
           end

branches_dates = branches.inject({}) do |hash, branch|
  date = Date.parse `git log -n1 --format='%ai' "#{branch}"`.split(" ").first
  hash[branch] = date
  hash
end

branches_logs = branches.inject({}) do |hash, branch|
  hash[branch] = `git log --color --decorate=short --date=iso8601 -n1 "#{branch}"`
  hash
end

pager_command = ENV['GIT_PAGER'] || ENV['PAGER']
pager = begin
          pager_command ? IO.popen(pager_command, "w") : STDOUT
        rescue
          STDOUT
        end

branches_dates
  .sort_by { |branch, date| date }
  .reverse
  .each do |branch, date|

  pager.puts branches_logs[branch]
  pager.puts
end

pager.close
