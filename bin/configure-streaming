#! /usr/bin/env bash

set -eu

VERBOSE=0
export DISPLAY=":0"

if [[ "${1:-}" == "--verbose" ]] ; then
  VERBOSE=1
fi

function say {
  echo "${0}: $*" 1>&2
  logger "${0}: $*"
}

function verbose {
  [[ $VERBOSE -gt 0 ]]
}

say "Looking for cameras on ${DISPLAY} ..."

if verbose ; then
  v4l2-ctl --list-devices
fi

function device_for {
  device_name=$(v4l2-ctl --list-devices | grep -A1 "$@" | fgrep "/dev" | tr -d '[:space:]')
  if [[ -z "$device_name" ]] ; then
    say "ERROR: could not find device for \"$@\""
    exit 1
  fi
  say "Found $device_name \"$@\""
  echo $device_name
}

function device_in_use_by {
  fuser $1 2> /dev/null | tr -d '[:space:]'
}

#
#  configure v4l2loopback virtual camera
#
#  see https://github.com/umlaeute/v4l2loopback
#
virtcam=$(device_for "VirtualCam")
v4l2loopback-ctl set-fps 30 $virtcam > /dev/null
v4l2-ctl -d $virtcam --set-ctrl sustain_framerate=1
if verbose ; then
  v4l2-ctl -d $virtcam --list-ctrls
fi

#
#  configure Logitech C920 webcam
#
#  we want 800x448@30fps since 30fps is the max, and 800x448 is the
#  highest res at which it can do that rate.
#
#  run `v4l2-ctl -d /dev/video4 --list-formats-ext` for more info on
#  supported resolution/rate combinations
#
logitech=$(device_for "HD Pro Webcam C920")
logitech_user=$(device_in_use_by $logitech)
if [[ -n "$logitech_user" ]] ; then
  say "skipping $logitech, in use by process $logitech_user"
else
  v4l2-ctl -d $logitech --set-fmt-video width=800,height=448
  v4l2-ctl -d $logitech --set-parm 30 > /dev/null
  if verbose ; then
    v4l2-ctl -d $logitech --get-fmt-video
    v4l2-ctl -d $logitech --get-parm
  fi

  # # these also might be nice to set according to some people on the internet
  # v4l2-ctl --set-ctrl white_balance_temperature_auto=0
  # v4l2-ctl --set-ctrl focus_auto=0
  # v4l2-ctl --set-ctrl exposure_auto=1
  # v4l2-ctl --set-ctrl backlight_compensation=0
fi

#
#  configure Elgato Cam Link (Sony a6000)
#
elgato=$(device_for "Cam Link 4K")
elgato_user=$(device_in_use_by $elgato)
if [[ -n "$elgato_user" ]] ; then
  say "skipping $elgato, in use by process $elgato_user"
else
  if verbose ; then
    v4l2-ctl -d $elgato --get-fmt-video
    v4l2-ctl -d $elgato --get-parm
  fi
fi
