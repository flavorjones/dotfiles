#! /usr/bin/env ruby

require "json"
require "erb"

CHROME = "google-chrome"
CHROME_PATH = "/usr/bin/#{CHROME}"
CHROME_ARGS = [
  "--disable-features=AvoidEarlyExtensionScriptContextCreation", # https://github.com/gioxx/MarvellousSuspender/issues/185
]
DESKTOP_DIR = File.join(ENV["HOME"], ".local/share/applications")
DESKTOP_FILE = File.join(DESKTOP_DIR, "chrome-profiles.desktop")

DESKTOP_MAIN_ERB = <<~EOT
  # generated by ~/bin/chrome-launch
  [Desktop Entry]
  Version=1.0
  Name=Google Chrome Profiles
  GenericName=Web Browser Profiles
  Comment=Launch a Chrome User Profile
  Exec=<%= CHROME_PATH %> %U
  StartupNotify=true
  Terminal=false
  Icon=google-chrome
  Type=Application
  Categories=Network;WebBrowser;
  Actions=<%= actions.keys.join(";") %>
  <% actions.each do |name, title| %>

  [Desktop Action <%= name %>]
  Name=Launch Profile <%= title %>
  Exec=<%= commands[name] %>
  <% end %>
EOT

def get_profiles
  profiles = {}
  Dir.chdir(File.join(ENV["HOME"], ".config", CHROME)) do
    Dir["*/Preferences"].each do |preferences_file|
      preferences = JSON.load File.read(preferences_file)
      profiles[File.dirname(preferences_file)] = preferences["profile"]["name"]
    end
  end
  profiles.sort_by { |k, v| v }.to_h
end

def _usage_and_exit
  puts "USAGE: #{File.basename(__FILE__)} [<profile-name>] [--setup]"
  puts
  puts "       where <profile-name> is one of:"
  puts
  get_profiles.each do |directory, name|
    puts "       - \"#{name}\" (#{directory})"
  end
  puts "       - \"incognito\""
  puts
  puts "       and may be case-insensitive or partial"
  puts
  exit 1
end

def snakecase(str)
  str.gsub(/([A-Z]+)([A-Z][a-z])/, '\1_\2').
    gsub(/([a-z\d])([A-Z])/, '\1_\2').
    tr("-", "_").
    gsub(/\s/, "_").
    gsub(/__+/, "_").
    downcase
end

def search_for(query)
  get_profiles.find { |k, v| profile_match(query, v) }
end

def launch_command(command)
  %Q{#{command} > /dev/null 2>&1 &}
end

def profile_match(query, profile_name)
  profile_name.downcase =~ /^#{query}/
end

def generate_desktop_file
  actions = {}
  commands = {}
  get_profiles.each do |directory, name|
    key = snakecase(name)
    actions[key] = name
    commands[key] = %Q{#{CHROME_PATH} --profile-directory="#{directory}" #{CHROME_ARGS.join(" ")}}
  end

  desktop_contents = ERB.new(DESKTOP_MAIN_ERB, trim_mode: "%-").result(binding)
  puts desktop_contents

  File.open(DESKTOP_FILE, "w") do |f|
    f.write desktop_contents
  end
end

query = ARGV[0]
_usage_and_exit unless query
query = query.downcase

if query == "--setup" # ugh
  generate_desktop_file
  exit 0
end

command = if profile_match(query, "incognito")
    launch_command %Q{#{CHROME_PATH} --incognito}
  else
    profile = search_for query
    _usage_and_exit unless profile

    profile_name = profile.first
    launch_command %Q{#{CHROME_PATH} --profile-directory="#{profile_name}"}
  end

puts command
system command
