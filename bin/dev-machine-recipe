#! /usr/bin/env bash
#
# __Recommended disk config__
#
# - sda1: ext4: 20GB, mount to /
# - sda2: ext4: remaining disk, mount to /home
# - sda?: swap: 8GB (or == RAM)
#
#
# __Recovering from a complete loss__
#
# 1. set CapsLock to Ctrl, compose key to right-alt, set sloppy window focus
# 2. recover ssh keys
# 3. `sudo apt-get install git ruby rake`
# 4. clone dotfiles repo, run setup, re-login
# 5. run `dev-machine-setup`
# 6. set up gnome-do keybinding
# 7. set up chrome profiles
# 8. clone emacs.d repo, run rake
# 9. set up dropbox to Shared
# 10. symlink Documents → Shared/Dropbox/Mike
# 11. symlink Music/Library → Shared/Dropbox/Music
# 12. background images from Documents/Pictures/Desktop\ Backgrounds
# 13. install cinnamon applet "slideshow"
# 14. add cinnamon applet: system monitor
# 15. install rvm
# 16. add quake and devilspie2 to startup applications
#
#
# __More Things__
#
# - set up alternative chrome profiles
#   - goruco
#   - lostatpivotal
#   - mario pivotalio
# - configure Pivotal VPN
# - configure PureVPN VPN
# - check out other code
#
# fido u2f key: http://sk.plug-up.com/
#
# To use your key on Linux, you must allow your account to access
# it. For this, you simply need to add a udev rule for the
# device. Create a file named /etc/udev/rules.d/10-security-key.rules
# with this content:
#
# SUBSYSTEMS=="usb", ATTRS{idVendor}=="2581", ATTRS{idProduct}=="f1d0", MODE="0660", GROUP="plugdev"
#
# and then `sudo udevadm trigger`
#

set -o errexit
set -o xtrace

install="sudo apt-get install -y -q"
update="sudo apt-get update -q"

#  basics for usability
${install} \
    gnome-do gnome-do-plugins \
    gcolor2 \
    keepassx \
    msttcorefonts \
    istanbul \
    gconf-editor \
    xclip

# if [[ `which google-chrome-beta` == "" ]] ; then
#     gnome-open https://www.google.com/intl/en/chrome/browser/beta.html
# fi

if [[ `which google-chrome-stable` == "" ]] ; then
  gnome-open https://www.google.com/intl/en/chrome/browser/desktop/index.html
fi

#  things I like for my desktop
${install} \
    terminator \
    devilspie2 \
    guake

# music player -- instead install from source?
#     clementine \


#  basics for development
${install} \
    git-core gitk subversion mercurial \
    build-essential valgrind \
    emacs24 autocutsel puppet-el markdown \
    mysql-server mysql-client libmysqlclient-dev \
    postgresql postgresql-client libpq-dev postgresql-contrib \
    openjdk-7-jdk \
    ack-grep \
    curl wget \
    cmake autoconf libtool \
    libpcre++0 libpcre++-dev libevent-dev \
    libssl-dev libcrypto++-dev \
    libreadline-dev \
    libxml2 libxml2-dev libxslt1.1 libxslt-dev \
    libyajl-dev libyaml-dev \
    colordiff \
    zip

#  less-basic stuff for LicenseFinder development
${install} \
    npm maven gradle
if [[ ! -e /usr/bin/node ]] ; then
  # https://github.com/joyent/node/issues/3911
  echo "symlinking node -> nodejs"
  sudo ln -s /usr/bin/nodejs /usr/bin/node
fi

#  ugh, more esoteric stuff for libmagick
${install} \
    libmagickcore-dev libmagick++-dev

#  reading mac drives, encrypted drives, vpn, bootable drives, etc.
${install} \
    hfsprogs cryptsetup \
    network-manager-openvpn-gnome \
    unetbootin

#  virtualbox
${install} \
    virtualbox-qt virtualbox-dkms \
    nfs-common nfs-kernel-server

if [[ `which vagrant` == "" ]] ; then
    gnome-open https://www.vagrantup.com/downloads.html
fi

#  skype
sudo apt-get install \
    skype ia32-libs

#  miscellaneous
sudo apt-get install \
    htop \
    remmina remmina-plugin-rdp

# heroku toolbelt
if [[ `which heroku` == "" ]] ; then
  wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
fi

# rvm
if [[ `which rvm` == "" ]] ; then
    bash < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
fi

# flux
if [[ `which fluxgui` == "" ]] ; then
  sudo add-apt-repository ppa:kilian/f.lux
  sudo apt-get update
  sudo apt-get install fluxgui
fi

### docker
echo "checking for alternate docker cache ..."
if fgrep DOCKER_OPTS /etc/default/docker | fgrep -e "-g" ; then
  echo "docker cache is OK!"
else
  echo "FAIL: docker is using the default cache directory"
  echo "FAIL: edit /etc/default/docker to set '-g /home/docker' in DOCKER_OPTS"
  gnome-open https://forums.docker.com/t/how-do-i-change-the-docker-image-installation-directory/1169
  exit 1
fi


# lenovo thinkpad section ##########

## x250 ##########

# micmute - http://www.thinkwiki.org/wiki/Microphone_Mute_Button
if [[ ! -e /etc/acpi/lenovo-mutemic.sh ]] ; then
  echo "CREATING: /etc/acpi/lenovo-mutemic.sh"
  cat > /tmp/lenovo-mutemic.sh <<EOF
#!/bin/bash

if [[ \$(amixer sget Capture) == *"[on]"* ]]; then
  amixer sset Capture nocap
else
  amixer sset Capture cap
fi
EOF
  chmod +x /tmp/lenovo-mutemic.sh
  sudo mv /tmp/lenovo-mutemic.sh /etc/acpi
fi

if [[ ! -e /etc/acpi/events/lenovo-mutemic ]] ; then
  echo "CREATING: /etc/acpi/lenovo-mutemic"
  cat > /tmp/lenovo-mutemic <<EOF
event=button/prog1 PROG1 00000080 00000000 K
action=/etc/acpi/lenovo-mutemic.sh
EOF
  sudo mv /tmp/lenovo-mutemic /etc/acpi/events
  sudo service acpid restart
fi

${HOME}/bin/dev-machine-configure

set +o xtrace
echo
echo
echo "SUCCESS! Congratulations, you have a box."
echo
echo
