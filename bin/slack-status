#! /usr/bin/env ruby

require 'httparty'
require 'json'

TOKEN_KEYS = %w[slack/pivotal/token slack/cloudfoundry/token]

STATUSES = {
  nyc: %w[:nyc: NYC],
  sf: %w[:sf: SF],
  wfh: %w[:house: WFH],
  meet: [":telephone_receiver:", "In a meeting"],
  commute: %w[:train: Commuting]
}

def usage
  puts "USAGE: #{File.basename(__FILE__)} <#{STATUSES.keys.sort.join("|")}}>"
  exit 1
end

def token_for token_key
  token_name = token_key
  command = %Q{lpass show --notes "#{token_name}"}
  %x{#{command}}.chomp
end

class Slack
  include HTTParty
  base_uri 'slack.com'
  
  PATH = "/api/users.profile.set"

  def self.update_status token, status_pair
    status_json = {
      "status_emoji" => status_pair[0],
      "status_text" => status_pair[1]
    }.to_json

    post PATH, {query: {token: token, profile: status_json}}
  end

end

status_key = ARGV[0]
usage if status_key.nil?

TOKEN_KEYS.each do |token_key|
  status = STATUSES[status_key.to_sym]
  usage if status.nil?

  puts "updating #{token_key} ..."
  token = token_for "Secure Notes/#{token_key}"

  Slack.update_status token, status
end
